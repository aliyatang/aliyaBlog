[
  
  {
    "title": "U3 Boolean Logic",
    "url": "/aliyaBlog/posts/U3-BooleanLogic/",
    "categories": "",
    "tags": "",
    "date": "2023-09-19 00:00:00 +0800",
    





    
    "snippet": "Data Tables!Truth tables are used to easily describe boolean algebra operations. Boolean algebra is an branch of mathematics dealing with, rather than the vast stretches of integers, two digits: 1 ...",
    "content": "Data Tables!Truth tables are used to easily describe boolean algebra operations. Boolean algebra is an branch of mathematics dealing with, rather than the vast stretches of integers, two digits: 1 and 0 (or true and false).There are many different types of boolean operations, and we’ll be covering them all here. We also have an interactive quiz that allows you to see how good you are at this!NOT (and states).Boolean statesAs you may know, binary and boolean states are very simple, 1 and 0, true and false. Boolean operations occur based off the comparison of two binary values, or inversion. Thus, these two boolean states are imperative to understanding. 1 and 0 are inverses, like on to off. They are also mutually exclusive. You can’t have a state that’s both on and off at the same time!NOTThe NOT operator inverses whatever it is affecting.The most basic operation is one that doesQuestion: What NOT(true)falseOperation(s): ANDANDAND is a boolean operation that you see in your everyday life! And in english is a conjugation, which denotes a combination of two or more objects, and in programming and binary math, it is very similar.For Example, in English you’d say:Take this and thatand you would not be fulfilling the request unless both this and that were taken.Similarly, in Binary math, when you use the and operator, you are only considering the output true unless both are true.AND: (XY)python: True and Falsejavascript: true &amp;&amp; falsejava: true &amp;&amp; false      X    Y     Output        TRUE    TRUE     TRUE        TRUE    FALSE     FALSE        FALSE    TRUE     FALSE        FALSE    FALSE     FALSE  NANDNAND is the not operator for and. In other words, it is the complete inverse of the AND function.In english this would be: DON'T take this and that. Note how the DON'T is a negative, asking you not to take both, but to take either.In binary this would be:NAND: (XY)’ (X*Y represents AND),(The ' denotes inverse)python: not (True and False)javascript: !(true &amp;&amp; false)java: !(true &amp;&amp; false)      X    Y     Output        TRUE    TRUE     FALSE        TRUE    FALSE     TRUE        FALSE    TRUE     TRUE        FALSE    FALSE     TRUE  InhibitionInhibition is a pseudo-and (not actual jargon) function. Written in plain-text, the Inhibition function can be two things: X·NOT(Y) or NOT(X)·Y. It is when one input is True, but the other is False. This is the inverse of either X or Y, but not both. It can be written as X or Y Inhibition.Inbiting X: (X’Y)python: (Not X)&amp;Yjavascript: !(X)&amp;&amp;Yjava: !(X)&amp;&amp;Y      X    Y     Output        TRUE    TRUE     FALSE        TRUE    FALSE     FALSE        FALSE    TRUE     TRUE        FALSE    FALSE     FALSE  Inbiting Y: (XY’)python: X&amp;(Not Y)javascript: X&amp;&amp;!(Y)java: X&amp;&amp;!(Y)      X    Y     Output        TRUE    TRUE     FALSE        TRUE    FALSE     TRUE        FALSE    TRUE     FALSE        FALSE    FALSE     FALSE  Note how the first and second terms (in their respective inhibitions) are inverted.Question: What would (1)(0) be? What about (1)(0)’? What about true&amp;&amp;false?(1)(0) would be false. (1)(0)’ would be inverse, so true. true&amp;&amp;false would be false.Operation(s): ORAND operations require both arguments in the function to be true in order to return true. However, or operations only require one to be true to return true. OR gates being more forgiving makes them great to check for different cases that AND simply cannot take. However, there are many variations that allow for greater specificity.OREnglish Example: Take either this or that. Here, if you take this, you fulfill the request. But if you also took that, you would also fulfill the request. In fact, if you took both, you’d actually be fulfilling the request, because they didn’t specify to not take both.Translated to binary, this is:OR: (X + Y)python: True or Falsejavascript: true || falsejava: true || false      X    Y     Output        TRUE    TRUE     TRUE        TRUE    FALSE     TRUE        FALSE    TRUE     TRUE        FALSE    FALSE     FALSE  NORRemember NAND? This is NAND, but for or. It takes the complete output of OR, and takes the inverse of it.NOR: (X + Y)’python: not (True or False)javascript: !(true || false)java: !(true || false)      X    Y     Output        TRUE    TRUE     False        TRUE    FALSE     FALSE        FALSE    TRUE     FALSE        FALSE    FALSE     True              **Question: What would 1+0 be? What about !(true             false)**              1+0 would be true. It means 1 OR 0, and at least one is true between the two so it is true. !(true             false) would just be the inverse, so false.      XORXOR, eXclusive OR, or bitwise OR allows for a coder to only return true if specifically only one input is true, but the other input is false. For example, this would be a situation where, if you have two objects, you can only take one or the other, not both, and not none.XOR: (X^Y)python: True^Falsejavascript: true^falsejava: true^false      X    Y     Output        TRUE    TRUE     FALSE        TRUE    FALSE     TRUE        FALSE    TRUE     TRUE        FALSE    FALSE     FALSE   XNORXNOR is the Exclusive NOR. This is the direct inverse of the XOR function, so it would be pretty simple.XNOR: (X^Y)’python: not (True^False)javascript: !(true^false)java: !(true^false)      X    Y     Output        TRUE    TRUE     TRUE        TRUE    FALSE     FALSE        FALSE    TRUE     FALSE        FALSE    FALSE     TRUE  Question: what would true^false be? what would !(false^false) be?ture^false is (true XOR false), since only only of them is true, then it’s true. !(false^false) is !(false xor false), and since both of them are false (not one is true) then the inside is false, then the ! makes it true.PEMDASNAO  Parenthesis  Exponents  Mutliplication/Divsion  Addition/Subtraction  NOT  AND  ORIN THIS ORDERDe Morgan’s LawAbove is an image of the important boolean algebra laws that are necessary to know. Not memorize, but know. The most important one we will cover is De Morgan’s law. Mainly because it is the most complex. As per wikipedia:The rules can be expressed in English as:- The negation of a disjunction is the conjunction of the negations- The negation of a conjunction is the disjunction of the negationsNotice how it the conjunction references AND and disjunction represents OR. Thus, this can be restated as…- NOT (A OR B) is equivalent to (NOT A) AND (NOT B)- NOT (A AND B) is equivalent to (NOT A) OR (NOT B)This is very useful when evaluating boolean expressions.HacksComplete the weird questions below.Weird questions  !(true)&amp;&amp;(false) = ? what in boolean values?NOT first. !(true) is false. So now it is (false)&amp;(false). This is false.  not ((((true and not (false)) ^ false) ^ true) &amp;&amp; false) (remember PEMDASNAO!)First step is most inner parenthesis: (true and not (false)). Within this do the not first, so it becomes true and true, which is true. Now the next layer of parenthesis is (true ^ false). Since only one is true in this XOR, then it is true. Now, (true ^ true). Since both are true in this XOR, then it is false. Now, (false &amp;&amp; false), which is false. Finally, not (false) is true.  Prove the following: !A * !(B + !C) = !A * (!B * !C)First part: !A * !(B + !C) = !A * !B * !(!C) = !A * !B * CSecond part: !A * (!B * !C) = !A * !B * !CNOT EQUAL  420 &amp;&amp; 66 (Hint, convert to binary, then perform the operation)          If you got this one, try 89 OR 42      420 110100100. 66 is 1000010.Line up and use AND between each digit.110100100001000010———00000000089 is 1011001. 42 is 101010.Line up and use OR between each digit.10110010101010——-1111011For each example, you can use code, but then show your work and how you got it. Please ask questions if you are confused!"
  },
  
  {
    "title": "CS Panel Takeaways",
    "url": "/aliyaBlog/posts/CS-panel/",
    "categories": "",
    "tags": "",
    "date": "2023-09-19 00:00:00 +0800",
    





    
    "snippet": "As my time for college applications nears and my sister’s recent departure for college as a Computer Science major, I have been spending a lot of time thinking about what major I should pursue. Mor...",
    "content": "As my time for college applications nears and my sister’s recent departure for college as a Computer Science major, I have been spending a lot of time thinking about what major I should pursue. More specifically, I’ve been looking into computer science, data science, and statistics. This panel has given me some clarity and considerable information on my decision of what path to take.Diverse Academic OptionsOne key takeaway from this panel was the diverse academic options in other fields other than Computer Science. Previously, I didn’t know that specialized fields like Computer Science and Engineering are densely packed with technical coursework. Other fields, Mabel said, such as Cognitive Science, have a wide range of classes offered within the field. I think this is a really important matter to consider, because this flexibility would allow me to fit my education with different interests and apply my Computer Science knowledge to it rather than just focus on that one field. Or, even if I do decide to go down the path of Computer Science, I should consider saving space for a minor to have other topics to expand my knowledge and apply my existing knowledge to.Demonstrating Commitment and PassionAnother takeaway that I had were the many ways I could demonstrate my commitment and passion of Computer Science to others, whether it be college admission officers or employers. Building projects/portfolios and extracurricular involvement that can be shown are key to this.Projects and PortfoliosA big takeaway from this and something I will start implementing immediately is having tangible projects and personal websites to actually show your skill instead of just speaking it. I think this really resonates with the saying “actions speak louder than words”, because as the students said, having a project or webiste that demonstrates what you know shows infinitely more than just claiming knowledgability in a programming language. This seemed overwhelming to me at first, but I now know that it’s better to start small with help such as YouTube tutorials. I think I will start making a personal website soon as well, considering what the students said as well. I want to spend time on the technical skills of the framework of the website for a friendly and accessible user interface, and then integrate various projects, mistake and growth documentation, and my resume into the website. I also leanred that anything that gives a human aspect can help too, such as sketches and personal things like your YouTube videos and podcasts. Having something tangible that has clear application and that makes an impact or shows how your passion stands out from others is really important.Extracurricular InvolvementInvolvement in extracurricular activites was something I already knew was crucial to the college application process to show interest and commitment to a topic. This panel just reinforced this idea, and gave me tips and ideas on how to and where to get internships, jobs, etc. Good resources for this are WayUp and Handshake, which are great ways for students to explore and find jobs and internships. I also definitely need to start setting up a LinkedIn account.Essential CS ToolsFamiliarity with relevant tools and technologies in today’s tech driven world is crucial and knowledgable use of them can give you a great advantage among others. Some CS tools that I noted that were valuable (especially to build my personal website) were:  Vercel: for easy deploying of web applications  SvelteKit: framework for building apps  Tailwind CSS: CSS framework to build custom user interfaces  Figma: collaborative design tool  ChatGPT: generating code and content, debugging. However, be cautious and use ChatGPT sparingly. Don’t rely on it too much, especially when you are a beginner coder.  Scikit-Learn: python library to implement machine learning models and statistical modelingReflectionRegardless of whether I decide to puruse a degree in Computer Science or another field, through this panel, I’ve enforced ideas that Computer Science is a crucial fundamental to have. It can be used to take large and long technical tasks and make them into 5 second processes, and the background can help immensely with other fields such as mechanical, software, electical engineering, and other fields. Also I should consider diverse academic options, actively participating in extracurricular activities, building a robust project portfolio, and mastering essential tools and skills. This will pave the way for a successful career in Computer Science or any other field of my choice. I’m really grateful to have knowledge in the field, and to have the oppurtunity to listen to these college students talk about their experiences with Computer Science."
  },
  
  {
    "title": "Problems and Fixes!",
    "url": "/aliyaBlog/posts/problems/",
    "categories": "",
    "tags": "",
    "date": "2023-08-23 00:00:00 +0800",
    





    
    "snippet": "Problems and Fixes!Documentation and solutions to problems I run into.Theme not Showing on Github PagesA problem I ran into this week was my theme showing up on my local server not showing up on th...",
    "content": "Problems and Fixes!Documentation and solutions to problems I run into.Theme not Showing on Github PagesA problem I ran into this week was my theme showing up on my local server not showing up on the github pages server. Instead, it was a totally unformatted page. I spent a while checking with my partner (because her theme was working) and trying fixes from online sources. However, I nothing seemed to work. When I checked the console, and it said the css file couldn’t be accessed… it turned out that in the html file the css file was trying to be accessed from the ROOT directory with the /assets… we must access it from the relative directory with assets…Error Msg:Fixed:"
  },
  
  {
    "title": "JS Calculator",
    "url": "/aliyaBlog/techtalk/home_style",
    "categories": "",
    "tags": "",
    "date": "2023-08-23 00:00:00 +0800",
    





    
    "snippet": "              0            1      2      3      +            4      5      6      -            7      8      9      *            A/C      0      .      =  ",
    "content": "              0            1      2      3      +            4      5      6      -            7      8      9      *            A/C      0      .      =  "
  },
  
  {
    "title": "Console Games - RPS, Higher Lower, Tic-Tac-Toe",
    "url": "/aliyaBlog/posts/java-console_games_IPYNB_2_/",
    "categories": "",
    "tags": "",
    "date": "2023-08-23 00:00:00 +0800",
    





    
    "snippet": "Console Games - RPS, Higher Lower, Tic-Tac-ToeConsole games that show elements from College Board’s UnitsHacks  To start the year, I want you to consider a simple Java console game or improve on th...",
    "content": "Console Games - RPS, Higher Lower, Tic-Tac-ToeConsole games that show elements from College Board’s UnitsHacks  To start the year, I want you to consider a simple Java console game or improve on the games listed.      Make RPS, Tic-Tack-Toe, and Higher Lower into different objects.  Answer why you think this is important?: You can isolate the games from each other: each game object can have its own set of rules, logic, and methods. This makes it easier to maintain and change, because if you edit one game, it won’t affect another.    Simplify logic, particularly T-T-T.  What could you do to make this more simple? Java has HashMap (like Python Dictionary), Arrays (fixed size), ArraLists (Dynamic Size): 2D array to represent board - initialization to make empty board, update board, clear board, etc, player class for x and o, function to make a move, check win, check draw, and main game loop.    Run the menu using recursion versus while loop.  import java.util.Random;import java.util.Scanner;public class RPSGame {    public static void main(String[] args) {        System.out.println(\"Welcome to Rock Paper Scissors!\");        System.out.println(\"Enter 'r' for rock, 'p' for paper, or 's' for scissors:\");        Scanner scanner = new Scanner(System.in);        String userChoice = scanner.nextLine().toLowerCase();        scanner.close();        Random random = new Random();        int computerChoice = random.nextInt(3); // 0 for rock, 1 for paper, 2 for scissors        String[] choices = {\"rock\", \"paper\", \"scissors\"};        String userSelected = choices[userChoice.equals(\"r\") ? 0 : userChoice.equals(\"p\") ? 1 : 2];        String computerSelected = choices[computerChoice];        System.out.println(\"You chose \" + userSelected);        System.out.println(\"The computer chose \" + computerSelected);        if (userChoice.equals(\"r\")) {            if (computerChoice == 1) {                System.out.println(\"You lose!\");            } else if (computerChoice == 2) {                System.out.println(\"You win!\");            } else {                System.out.println(\"It's a tie!\");            }        } else if (userChoice.equals(\"p\")) {            if (computerChoice == 1) {                System.out.println(\"It's a tie!\");            } else if (computerChoice == 2) {                System.out.println(\"You lose!\");            } else {                System.out.println(\"You win!\");            }        } else if (userChoice.equals(\"s\")) {            if (computerChoice == 1) {                System.out.println(\"You win!\");            } else if (computerChoice == 2) {                System.out.println(\"It's a tie!\");            } else {                System.out.println(\"You lose!\");            }        } else {            System.out.println(\"Invalid input, try again.\");        }    }}RPSGame.main(null)Welcome to Rock Paper Scissors!Enter 'r' for rock, 'p' for paper, or 's' for scissors:pYou chose paperThe computer chose scissorsYou lose!import java.util.Random;import java.util.Scanner;public class HigherLowerGame {    public static void main(String[] args) {        System.out.println(\"Welcome to Higher or Lower!\");        System.out.println(\"I'm thinking of a number between 1 and 8.\");        System.out.println(\"You have three guesses to get it right.\");        Scanner scanner = new Scanner(System.in);        Random random = new Random();        int answer = random.nextInt(8) + 1;        for (int remainingGuesses = 3; remainingGuesses &gt; 0; remainingGuesses--) {            System.out.print(\"Enter your guess: \");            int userGuess = scanner.nextInt();            if (userGuess == answer) {                System.out.println(\"Congratulations, you guessed it right!\");                break;            } else if (userGuess &gt; answer) {                System.out.println(\"The number is lower.\");            } else {                System.out.println(\"The number is higher.\");            }            if (remainingGuesses &gt; 1) {                System.out.println(\"You have \" + (remainingGuesses - 1) + \" guesses remaining.\");            } else {                System.out.println(\"You have no more guesses. The number was \" + answer + \".\");            }        }        System.out.println(\"Thanks for playing!\");        scanner.close();    }}HigherLowerGame.main(null)Welcome to Higher or Lower!I'm thinking of a number between 1 and 8.You have three guesses to get it right.Enter your guess: 4The number is lower.You have 2 guesses remaining.Enter your guess: 2The number is higher.You have 1 guesses remaining.Enter your guess: 3Congratulations, you guessed it right!Thanks for playing!import java.util.Random;import java.util.Scanner;public class TicTacToeGame {    private static final int BOARD_SIZE = 3;    private static final char EMPTY = ' ';    private static char[][] board = new char[BOARD_SIZE][BOARD_SIZE];    private static char currentPlayer = 'X';    public static void main(String[] args) {        initializeBoard();        playGame();    }    private static void initializeBoard() {        for (int row = 0; row &lt; BOARD_SIZE; row++) {            for (int col = 0; col &lt; BOARD_SIZE; col++) {                board[row][col] = EMPTY;            }        }    }    private static void printBoard() {        System.out.println(\"-------------\");        for (int row = 0; row &lt; BOARD_SIZE; row++) {            System.out.print(\"| \");            for (int col = 0; col &lt; BOARD_SIZE; col++) {                System.out.print(board[row][col] + \" | \");            }            System.out.println(\"\\n-------------\");        }    }    private static boolean isBoardFull() {        for (int row = 0; row &lt; BOARD_SIZE; row++) {            for (int col = 0; col &lt; BOARD_SIZE; col++) {                if (board[row][col] == EMPTY) {                    return false;                }            }        }        return true;    }    private static boolean makeMove(int row, int col) {        if (row &lt; 0 || row &gt;= BOARD_SIZE || col &lt; 0 || col &gt;= BOARD_SIZE || board[row][col] != EMPTY) {            return false;        }        board[row][col] = currentPlayer;        return true;    }    private static boolean checkWin(char player) {    // Check rows    for (int row = 0; row &lt; BOARD_SIZE; row++) {        if (board[row][0] == player &amp;&amp; board[row][1] == player &amp;&amp; board[row][2] == player) {            return true;        }    }    // Check columns    for (int col = 0; col &lt; BOARD_SIZE; col++) {        if (board[0][col] == player &amp;&amp; board[1][col] == player &amp;&amp; board[2][col] == player) {            return true;        }    }    // Check diagonals    if ((board[0][0] == player &amp;&amp; board[1][1] == player &amp;&amp; board[2][2] == player) ||        (board[0][2] == player &amp;&amp; board[1][1] == player &amp;&amp; board[2][0] == player)) {        return true;    }    return false;}    private static void playGame() {        Scanner scanner = new Scanner(System.in);        Random random = new Random();        boolean againstComputer = false;        System.out.println(\"Welcome to Tic-Tac-Toe!\");        System.out.println(\"Do you want to play against a friend (1) or the computer (2)?\");        int choice = scanner.nextInt();        if (choice == 2) {            againstComputer = true;        }        while (true) {            System.out.println(\"Current board:\");            printBoard();            System.out.println(\"Player \" + currentPlayer + \", enter row (0-2) and column (0-2) separated by space: \");            int row;            int col;            if (againstComputer &amp;&amp; currentPlayer == 'O') {                row = random.nextInt(3);                col = random.nextInt(3);            } else {                row = scanner.nextInt();                col = scanner.nextInt();            }            if (makeMove(row, col)) {                if (checkWin(currentPlayer)) {                    System.out.println(\"Player \" + currentPlayer + \" wins!\");                    break;                } else if (isBoardFull()) {                    System.out.println(\"It's a tie!\");                    break;                } else {                    currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';                }            } else {                System.out.println(\"Invalid move. Try again.\");            }        }        scanner.close();    }}TicTacToeGame.main(null)Welcome to Tic-Tac-Toe!Do you want to play against a friend (1) or the computer (2)?2Current board:-------------|   |   |   | -------------|   |   |   | -------------|   |   |   | -------------Player X, enter row (0-2) and column (0-2) separated by space: 0 0Current board:-------------| X |   |   | -------------|   |   |   | -------------|   |   |   | -------------Player O, enter row (0-2) and column (0-2) separated by space: Current board:-------------| X |   | O | -------------|   |   |   | -------------|   |   |   | -------------Player X, enter row (0-2) and column (0-2) separated by space: 2 2Current board:-------------| X |   | O | -------------|   |   |   | -------------|   |   | X | -------------Player O, enter row (0-2) and column (0-2) separated by space: Invalid move. Try again.Current board:-------------| X |   | O | -------------|   |   |   | -------------|   |   | X | -------------Player O, enter row (0-2) and column (0-2) separated by space: Current board:-------------| X | O | O | -------------|   |   |   | -------------|   |   | X | -------------Player X, enter row (0-2) and column (0-2) separated by space: 2 0Current board:-------------| X | O | O | -------------|   |   |   | -------------| X |   | X | -------------Player O, enter row (0-2) and column (0-2) separated by space: Current board:-------------| X | O | O | -------------|   |   |   | -------------| X | O | X | -------------Player X, enter row (0-2) and column (0-2) separated by space: 1 0Player X wins!"
  },
  
  {
    "title": "Build a Project",
    "url": "/aliyaBlog/posts/build_project/",
    "categories": "",
    "tags": "",
    "date": "2023-08-22 00:00:00 +0800",
    





    
    "snippet": "Build a ProjectContinue learning the Development work flow for GitHub Pages index.md and _posts. Now is the time to build you first project.Conventional Calculator                                  ...",
    "content": "Build a ProjectContinue learning the Development work flow for GitHub Pages index.md and _posts. Now is the time to build you first project.Conventional Calculator                                                                                                                                                                                                                                                                                    "
  },
  
  {
    "title": "Linux Shell and Bash",
    "url": "/aliyaBlog/posts/Linux_Bash_IPYNB_2_/",
    "categories": "",
    "tags": "",
    "date": "2023-08-22 00:00:00 +0800",
    





    
    "snippet": "Bash Tutorial  A brief overview of Bash, on your way to becoming a Linux expert.  When a computer boots up, a kernel (MacOS, Windows, Linux) is started.  This kernel provides a shell, or terminal, ...",
    "content": "Bash Tutorial  A brief overview of Bash, on your way to becoming a Linux expert.  When a computer boots up, a kernel (MacOS, Windows, Linux) is started.  This kernel provides a shell, or terminal, that allows user to interact with a most basic set of commands.  Typically, the casual user will not interact with the shell/terminal as a Desktop User Interface is started by the computer boot up process.  To activate a shell directly, users will run a “terminal” through the Desktop. VS Code provides ability to activate \"terminal\" while in the IDE.Variable Prerequisites  Setup bash shell dependency variables for this page.  Variables are one of the first aspects of programming.  Variables have \"name\" and a \"value\".  Hack Note: Change variables to match your student project.Define variableThe following code cell defines 3 variables and assigns each a value.  There are some extra command, called a HERE document, that write these variables to a file.  This is so we can use these variables over and over below.%%script bash# Dependency Variables, set to match your project directoriescat &lt;&lt;EOF &gt; /tmp/variables.shexport project_dir=$HOME/vscode  # change vscode to different name to test git cloneexport project=\\$project_dir/teacher  # change teacher to name of project from git cloneexport project_repo=\"https://github.com/nighthawkcoders/teacher.git\"  # change to project of choiceEOFbash: fg: %%script: no such jobOutput the value of a variableThe following code cell outputs the value of the variables, using the echo command.  For visual understanding in the output, each echo command provide a title before the $variable%%script bash# Extract saved variablessource /tmp/variables.sh# Output shown title and value variablesecho \"Project dir: $project_dir\"echo \"Project: $project\"echo \"Repo: $project_repo\"bash: fg: %%script: no such jobProject dir: /Users/aliyatang/vscodeProject: /Users/aliyatang/vscode/teacherRepo: https://github.com/nighthawkcoders/teacher.gitProject Setup and Analysis with Bash ScriptsThe bash scripts that follow automate what was done in the setup procedures.  The purpose of this is to show that many of the commands we performed can be added to a script, then performed automatically.Pull Code  Pull code from GitHub to your machine. This is a bash script, a sequence of commands, that will create a project directory and add the “project” from GitHub to the vscode directory.  There is conditional logic to make sure that clone only happen if it does not (!) exist.   Here are some key elements in this code…  cd command (change directory), remember this from terminal session  if statements (conditional statement, called selection statement by College Board), code inside only happens if condition is met%%script bash# Extract saved variablessource /tmp/variables.shecho \"Using conditional statement to create a project directory and project\"cd ~    # start in home directory# Conditional block to make a project directoryif [ ! -d $project_dir ]then     echo \"Directory $project_dir does not exists... makinng directory $project_dir\"    mkdir -p $project_dirfiecho \"Directory $project_dir exists.\" # Conditional block to git clone a project from project_repoif [ ! -d $project ]then    echo \"Directory $project does not exists... cloning $project_repo\"    cd $project_dir    git clone $project_repo    cd ~fiecho \"Directory $project exists.\" bash: fg: %%script: no such jobUsing conditional statement to create a project directory and projectDirectory /Users/aliyatang/vscode exists.Directory /Users/aliyatang/vscode/teacher does not exists... cloning https://github.com/nighthawkcoders/teacher.gitCloning into 'teacher'...remote: Enumerating objects: 1913, done.        remote: Counting objects: 100% (481/481), done.        remote: Compressing objects: 100% (185/185), done.        remote: Total 1913 (delta 308), reused 462 (delta 296), pack-reused 1432        Receiving objects: 100% (1913/1913), 8.53 MiB | 12.16 MiB/s, done.Resolving deltas: 100% (1223/1223), done.Directory /Users/aliyatang/vscode/teacher exists.Look at files Github project  All computers contain files and directories.  The clone brought more files from cloud to your machine.  Review the bash shell script, observe the commands that show and interact with files and directories.  These were used during setup.  “ls” lists computer files in Unix and Unix-like operating systems  “cd” offers way to navigate and change working directory  “pwd” print working directory  “echo” used to display line of text/string that are passed as an argument%%script bash# Extract saved variablessource /tmp/variables.shecho \"Navigate to project, then navigate to area wwhere files were cloned\"cd $projectpwdecho \"\"echo \"list top level or root of files with project pulled from github\"lsbash: fg: %%script: no such jobNavigate to project, then navigate to area wwhere files were cloned/Users/aliyatang/vscode/teacherlist top level or root of files with project pulled from githubGemfile\t\t_config.yml\t_notebooks\tcsp.md\t\tindexBlogs.mdLICENSE\t\t_data\t\t_posts\t\tcsse.md\t\tscriptsMakefile\t_includes\tassets\t\timagesREADME.md\t_layouts\tcsa.md\t\tindex.mdLook at file list with hidden and long attributes  Most linux commands have options to enhance behavior.  The enhanced listing below shows permission bits, owner of file, size and date.ls reference%%script bash# Extract saved variablessource /tmp/variables.shecho \"Navigate to project, then navigate to area wwhere files were cloned\"cd $projectpwdecho \"\"echo \"list all files in long format\"ls -al   # all files -a (hidden) in -l long listingbash: fg: %%script: no such jobNavigate to project, then navigate to area wwhere files were cloned/Users/aliyatang/vscode/teacherlist all files in long formattotal 104drwxr-xr-x  23 aliyatang  staff   736 Aug 22 23:35 .drwxr-xr-x  20 aliyatang  staff   640 Aug 22 23:35 ..drwxr-xr-x  12 aliyatang  staff   384 Aug 22 23:35 .gitdrwxr-xr-x   3 aliyatang  staff    96 Aug 22 23:35 .github-rw-r--r--   1 aliyatang  staff   157 Aug 22 23:35 .gitignore-rw-r--r--   1 aliyatang  staff   122 Aug 22 23:35 Gemfile-rw-r--r--   1 aliyatang  staff  1081 Aug 22 23:35 LICENSE-rw-r--r--   1 aliyatang  staff  3131 Aug 22 23:35 Makefile-rw-r--r--   1 aliyatang  staff  6853 Aug 22 23:35 README.md-rw-r--r--   1 aliyatang  staff   607 Aug 22 23:35 _config.ymldrwxr-xr-x   6 aliyatang  staff   192 Aug 22 23:35 _datadrwxr-xr-x  11 aliyatang  staff   352 Aug 22 23:35 _includesdrwxr-xr-x   6 aliyatang  staff   192 Aug 22 23:35 _layoutsdrwxr-xr-x  38 aliyatang  staff  1216 Aug 22 23:35 _notebooksdrwxr-xr-x  12 aliyatang  staff   384 Aug 22 23:35 _postsdrwxr-xr-x   4 aliyatang  staff   128 Aug 22 23:35 assets-rw-r--r--   1 aliyatang  staff    92 Aug 22 23:35 csa.md-rw-r--r--   1 aliyatang  staff    98 Aug 22 23:35 csp.md-rw-r--r--   1 aliyatang  staff   108 Aug 22 23:35 csse.mddrwxr-xr-x  34 aliyatang  staff  1088 Aug 22 23:35 images-rw-r--r--   1 aliyatang  staff  5149 Aug 22 23:35 index.md-rw-r--r--   1 aliyatang  staff    53 Aug 22 23:35 indexBlogs.mddrwxr-xr-x   8 aliyatang  staff   256 Aug 22 23:35 scripts%%script bash# Extract saved variablessource /tmp/variables.shecho \"Look for posts\"export posts=$project/_posts  # _posts inside projectcd $posts  # this should exist per fastpagespwd  # present working directoryls -l  # list postsbash: fg: %%script: no such jobLook for posts/Users/aliyatang/vscode/teacher/_poststotal 176-rw-r--r--  1 aliyatang  staff   7685 Aug 22 23:35 2023-08-16-Tools_Equipment.md-rw-r--r--  1 aliyatang  staff   4650 Aug 22 23:35 2023-08-16-pair_programming.md-rw-r--r--  1 aliyatang  staff   7137 Aug 22 23:35 2023-08-17-markdown-html_fragments.md-rw-r--r--  1 aliyatang  staff   6659 Aug 22 23:35 2023-08-23-javascript-calculator.md-rw-r--r--  1 aliyatang  staff  10642 Aug 22 23:35 2023-08-30-agile_methodolgy.md-rw-r--r--  1 aliyatang  staff   3849 Aug 22 23:35 2023-08-30-javascript-music-api.md-rw-r--r--  1 aliyatang  staff   5312 Aug 22 23:35 2023-09-06-javascript-motion-mario-oop.md-rw-r--r--  1 aliyatang  staff   4812 Aug 22 23:35 2023-09-13-java-free_response.md-rw-r--r--  1 aliyatang  staff  13220 Aug 22 23:35 2023-10-16-java-api-pojo-jpa.md-rw-r--r--  1 aliyatang  staff   6819 Aug 22 23:35 2023-11-13-jwt-java-spring.md%%script bash# Extract saved variablessource /tmp/variables.shecho \"Look for notebooks\"export notebooks=$project/_notebooks  # _notebooks is inside projectcd $notebooks   # this should exist per fastpagespwd  # present working directoryls -l  # list notebooksbash: fg: %%script: no such jobLook for notebooks/Users/aliyatang/vscode/teacher/_notebookstotal 1472-rw-r--r--  1 aliyatang  staff   13014 Aug 22 23:35 2023-08-01-cloud_database.ipynb-rw-r--r--  1 aliyatang  staff    8992 Aug 22 23:35 2023-08-01-mario_player.ipynb-rw-r--r--  1 aliyatang  staff   43705 Aug 22 23:35 2023-08-02-cloud-workspace-automation.ipynb-rw-r--r--  1 aliyatang  staff   22060 Aug 22 23:35 2023-08-03-mario_block.ipynb-rw-r--r--  1 aliyatang  staff   11791 Aug 22 23:35 2023-08-03-mario_platform.ipynb-rw-r--r--  1 aliyatang  staff   19450 Aug 22 23:35 2023-08-03-mario_tube.ipynb-rw-r--r--  1 aliyatang  staff   24387 Aug 22 23:35 2023-08-04-mario_background.ipynb-rw-r--r--  1 aliyatang  staff    3496 Aug 22 23:35 2023-08-07-mario_lesson.ipynb-rw-r--r--  1 aliyatang  staff   10110 Aug 22 23:35 2023-08-15-java-hello.ipynb-rw-r--r--  1 aliyatang  staff   25624 Aug 22 23:35 2023-08-16-github_pages_setup.ipynb-rw-r--r--  1 aliyatang  staff   16156 Aug 22 23:35 2023-08-16-linux_shell.ipynb-rw-r--r--  1 aliyatang  staff   11466 Aug 22 23:35 2023-08-16-python_hello.ipynb-rw-r--r--  1 aliyatang  staff    9425 Aug 22 23:35 2023-08-23-github_pages_anatomy.ipynb-rw-r--r--  1 aliyatang  staff   22668 Aug 22 23:35 2023-08-23-java-console_games.ipynb-rw-r--r--  1 aliyatang  staff    9038 Aug 22 23:35 2023-08-23-python_tricks.ipynb-rw-r--r--  1 aliyatang  staff   10152 Aug 22 23:35 2023-08-30-javascript_top_10.ipynb-rw-r--r--  1 aliyatang  staff    9689 Aug 22 23:35 2023-08-30-showcase-S1-pair.ipynb-rw-r--r--  1 aliyatang  staff    7192 Aug 22 23:35 2023-09-05-python-flask-anatomy.ipynb-rw-r--r--  1 aliyatang  staff   22157 Aug 22 23:35 2023-09-06-AWS-deployment.ipynb-rw-r--r--  1 aliyatang  staff   14380 Aug 22 23:35 2023-09-06-java-primitives.ipynb-rw-r--r--  1 aliyatang  staff   11671 Aug 22 23:35 2023-09-06-javascript-input.ipynb-rw-r--r--  1 aliyatang  staff   13706 Aug 22 23:35 2023-09-12-java_menu_class.ipynb-rw-r--r--  1 aliyatang  staff    9562 Aug 22 23:35 2023-09-13-java_fibonaccii_class.ipynb-rw-r--r--  1 aliyatang  staff   44217 Aug 22 23:35 2023-09-13-javascript_output.ipynb-rw-r--r--  1 aliyatang  staff   43423 Aug 22 23:35 2023-09-13-python-pandas_intro.ipynb-rw-r--r--  1 aliyatang  staff   11578 Aug 22 23:35 2023-09-20-java-image_2D.ipynb-rw-r--r--  1 aliyatang  staff   26739 Aug 22 23:35 2023-09-20-javascript_motion_dog.ipynb-rw-r--r--  1 aliyatang  staff   13599 Aug 22 23:35 2023-10-02-java-spring-anatomy.ipynb-rw-r--r--  1 aliyatang  staff   12429 Aug 22 23:35 2023-10-09-java-chatgpt.ipynb-rw-r--r--  1 aliyatang  staff   15632 Aug 22 23:35 2023-10-09-javascript_api.ipynb-rw-r--r--  1 aliyatang  staff  113091 Aug 22 23:35 2023-10-09-python_machine_learing_fitness.ipynb-rw-r--r--  1 aliyatang  staff   16271 Aug 22 23:35 2023-11-13-jwt-python-flask.ipynb-rw-r--r--  1 aliyatang  staff   15951 Aug 22 23:35 2023-11-13-vulnerabilities.ipynb-rw-r--r--  1 aliyatang  staff   18328 Aug 22 23:35 2023-11-20-jwt-java-spring-challenge.md-rw-r--r--  1 aliyatang  staff   10745 Aug 22 23:35 2024-01-04-cockpit-setup.ipynbdrwxr-xr-x  3 aliyatang  staff      96 Aug 22 23:35 files%%script bash# Extract saved variablessource /tmp/variables.shecho \"Look for images in notebooks, print working directory, list files\"cd $notebooks/images  # this should exist per fastpagespwdls -lbash: fg: %%script: no such jobLook for images in notebooks, print working directory, list filesbash: cd: /Users/aliyatang/vscode/teacher/_notebooks/images: No such file or directory/Users/aliyatang/vscode/teacher/_notebookstotal 1472-rw-r--r--  1 aliyatang  staff   13014 Aug 22 23:35 2023-08-01-cloud_database.ipynb-rw-r--r--  1 aliyatang  staff    8992 Aug 22 23:35 2023-08-01-mario_player.ipynb-rw-r--r--  1 aliyatang  staff   43705 Aug 22 23:35 2023-08-02-cloud-workspace-automation.ipynb-rw-r--r--  1 aliyatang  staff   22060 Aug 22 23:35 2023-08-03-mario_block.ipynb-rw-r--r--  1 aliyatang  staff   11791 Aug 22 23:35 2023-08-03-mario_platform.ipynb-rw-r--r--  1 aliyatang  staff   19450 Aug 22 23:35 2023-08-03-mario_tube.ipynb-rw-r--r--  1 aliyatang  staff   24387 Aug 22 23:35 2023-08-04-mario_background.ipynb-rw-r--r--  1 aliyatang  staff    3496 Aug 22 23:35 2023-08-07-mario_lesson.ipynb-rw-r--r--  1 aliyatang  staff   10110 Aug 22 23:35 2023-08-15-java-hello.ipynb-rw-r--r--  1 aliyatang  staff   25624 Aug 22 23:35 2023-08-16-github_pages_setup.ipynb-rw-r--r--  1 aliyatang  staff   16156 Aug 22 23:35 2023-08-16-linux_shell.ipynb-rw-r--r--  1 aliyatang  staff   11466 Aug 22 23:35 2023-08-16-python_hello.ipynb-rw-r--r--  1 aliyatang  staff    9425 Aug 22 23:35 2023-08-23-github_pages_anatomy.ipynb-rw-r--r--  1 aliyatang  staff   22668 Aug 22 23:35 2023-08-23-java-console_games.ipynb-rw-r--r--  1 aliyatang  staff    9038 Aug 22 23:35 2023-08-23-python_tricks.ipynb-rw-r--r--  1 aliyatang  staff   10152 Aug 22 23:35 2023-08-30-javascript_top_10.ipynb-rw-r--r--  1 aliyatang  staff    9689 Aug 22 23:35 2023-08-30-showcase-S1-pair.ipynb-rw-r--r--  1 aliyatang  staff    7192 Aug 22 23:35 2023-09-05-python-flask-anatomy.ipynb-rw-r--r--  1 aliyatang  staff   22157 Aug 22 23:35 2023-09-06-AWS-deployment.ipynb-rw-r--r--  1 aliyatang  staff   14380 Aug 22 23:35 2023-09-06-java-primitives.ipynb-rw-r--r--  1 aliyatang  staff   11671 Aug 22 23:35 2023-09-06-javascript-input.ipynb-rw-r--r--  1 aliyatang  staff   13706 Aug 22 23:35 2023-09-12-java_menu_class.ipynb-rw-r--r--  1 aliyatang  staff    9562 Aug 22 23:35 2023-09-13-java_fibonaccii_class.ipynb-rw-r--r--  1 aliyatang  staff   44217 Aug 22 23:35 2023-09-13-javascript_output.ipynb-rw-r--r--  1 aliyatang  staff   43423 Aug 22 23:35 2023-09-13-python-pandas_intro.ipynb-rw-r--r--  1 aliyatang  staff   11578 Aug 22 23:35 2023-09-20-java-image_2D.ipynb-rw-r--r--  1 aliyatang  staff   26739 Aug 22 23:35 2023-09-20-javascript_motion_dog.ipynb-rw-r--r--  1 aliyatang  staff   13599 Aug 22 23:35 2023-10-02-java-spring-anatomy.ipynb-rw-r--r--  1 aliyatang  staff   12429 Aug 22 23:35 2023-10-09-java-chatgpt.ipynb-rw-r--r--  1 aliyatang  staff   15632 Aug 22 23:35 2023-10-09-javascript_api.ipynb-rw-r--r--  1 aliyatang  staff  113091 Aug 22 23:35 2023-10-09-python_machine_learing_fitness.ipynb-rw-r--r--  1 aliyatang  staff   16271 Aug 22 23:35 2023-11-13-jwt-python-flask.ipynb-rw-r--r--  1 aliyatang  staff   15951 Aug 22 23:35 2023-11-13-vulnerabilities.ipynb-rw-r--r--  1 aliyatang  staff   18328 Aug 22 23:35 2023-11-20-jwt-java-spring-challenge.md-rw-r--r--  1 aliyatang  staff   10745 Aug 22 23:35 2024-01-04-cockpit-setup.ipynbdrwxr-xr-x  3 aliyatang  staff      96 Aug 22 23:35 filesLook inside a Markdown File  “cat” reads data from the file and gives its content as output%%script bash# Extract saved variablessource /tmp/variables.shecho \"Navigate to project, then navigate to area wwhere files were cloned\"cd $projectecho \"show the contents of README.md\"echo \"\"cat README.md  # show contents of file, in this case markdownecho \"\"echo \"end of README.md\"bash: fg: %%script: no such jobNavigate to project, then navigate to area wwhere files were clonedshow the contents of README.md## Teacher Blog siteThis site is intended for the development of Teacher content.  This blogging site is built using GitHub Pages [GitHub Pages](https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site).- The purpose is to build lessons and distribute across different Computer Science sections (CSSE, CSP, CSA), a pathway that covers 3 years of High School Instruction.- The primary languages and frameworks that are taught are `JavaScript/HTML/CSS`, `Python/Flask`, `Java/Spring`.  Read below for more details.- In this course, Teacher content is not exclusively developed by Teachers.  In fact, many Students have been invited to develop and publish content into this repository.  Their names will appear as authors on the content which they aided in producing.- This site has incorporated ideas and has radically modified scripts from the now deprecated [fastpages](https://github.com/fastai/fastpages) repository.- This site includes assistance and guideance from ChatGPT, [chat.openai.com](https://chat.openai.com/) ### Courses and PathwayThe focus of the Del Norte Computer Science three-year pathway is `Full Stack Web Development`.  This focus provides a variety of technologies and exposures.  The intention of the pathway is breadth and exposure.- `JavaScript` documents are focused on frontend development and for entry class into the Del Norte Computer Science pathway.  JavaScript documents and materials are a prerequisites to Python and Java classes.- `Python` documents are focused on backend development and requirements for the AP Computer Science Principles exam.- `Java` documents are focused on backend development and requirements for the AP Computer Sciene A exam.- `Data Structures` materials embedded into JavaScript, Python, or Java documents are focused on college course articulation.### Resources and InstructionThe materials, such as this README, as well as `Tools`, `DevOps`, and `Collaboration` resources are integral part of this course and Computer Science in general.  Everything in our environment is part of our learning of Computer Science. - `Visual Studio Code` is key the code-build-debug cycle editor used in this course, [VSCode download](https://code.visualstudio.com/).  This is an example of a resource, but inside of it it has features for collaboration.- `Tech Talks`, aka lectures, are intended to be interactive and utilize `Jupyter Notebooks` and Websites.  This is an example of blending instruction and tools together, which in turn provide additional resources for learning.  For instance, deep knowledge on  GitHub Pages and Notebooks are valuable in understanding principles behind Full Stack Development and Data Science. ## GitHub PagesAll `GitHub Pages` websites are managed on GitHub infrastructure. GitHub uses `Jekyll` to tranform your content into static websites and blogs. Each time we change files in GitHub it initiates a GitHub Action that rebuilds and publishes the site with Jekyll.  - GitHub Pages is powered by: [Jekyll](https://jekyllrb.com/).- Publised teacher website: [nighthawkcoders.github.io/teacher](https://nighthawkcoders.github.io/teacher/)## Preparing a Preview Site In all development, it is recommended to test your code before deployment.  The GitHub Pages development process is optimized by testing your development on your local machine, prior to files on GitHubDevelopment Cycle. For GitHub pages, the tooling described below will create a development cycle  `make-code-save-preview`.  In the development cycle, it is a requirement to preview work locally, prior to doing a VSCode `commit` to git.Deployment Cycle.  In the deplopyment cycle, `sync-github-action-review`, it is a requirement to complete the development cycle prior to doing a VSCode `sync`.  The sync triggers github repository update.  The action starts the jekyll build to publish the website.  Any step can have errors and will require you to do a review.### WSL and/or Ubuntu installation requirements- The result of these step is Ubuntu tools to run preview server.  These procedures were created using [jekyllrb.com](https://jekyllrb.com/docs/installation/ubuntu/)```bash# # WSL/Ubuntu setup#mkdir mkdir vscodegit clone https://github.com/nighthawkcoders/teacher.git# run script, path vscode/teacher are baked in script~/vscode/teacher/scripts/activate_ubuntu.sh#=== !!!Start a new Terminal!!! ===#=== Continue to next section ===```### MacOs installation requirements - Ihe result of these step are MacOS tools to run preview server.  These procedures were created using [jekyllrb.com](https://jekyllrb.com/docs/installation/macos/). ```bash# # MacOS setup#mkdir mkdir vscodegit clone https://github.com/nighthawkcoders/teacher.git# run script, path vscode/teacher are baked in script~/vscode/teacher/scripts/activate_macos.sh#=== !!!Start a new Terminal!!! ===#=== Continue to next section ===```### Run Preview Server- The result of these step is server running on: http://0.0.0.0:4100/teacher/.  Regeneration messages will run in terminal on any save and update site upon refresh.  Terminal is active, press the Enter or Return key in the terminal at any time to see prompt to enter commands.- Complete installation```bashcd ~/vscode/teacherbundle installmake```- Run Server.  This requires running terminal commands `make`, `make stop`, `make clean`, or `make convert` to manage the running server.  Logging of details will appear in terminal.   A `Makefile` has been created in project to support commands and start processes.    - Start preview server in terminal    ```bash    cd ~/vscode/teacher  # my project location, adapt as necessary    make    ```    - Terminal output of shows server address. Cmd or Ctl click http location to open preview server in browser. Example Server address message...     ```    Server address: http://0.0.0.0:4100/teacher/    ```    - Save on ipynb or md activiates \"regeneration\". Refresh browser to see updates. Example terminal message...    ```    Regenerating: 1 file(s) changed at 2023-07-31 06:54:32        _notebooks/2024-01-04-cockpit-setup.ipynb    ```    - Terminal message are generated from background processes.  Click return or enter to obtain prompt and use terminal as needed for other tasks.  Alway return to root of project `cd ~/vscode/teacher` for all \"make\" actions.             - Stop preview server, but leave constructed files in project for your review.    ```bash    make stop    ```    - Stop server and \"clean\" constructed files, best choice when renaming files to eliminate potential duplicates in constructed files.    ```bash    make clean    ```    - Test notebook conversions, best choice to see if IPYNB conversion is acting up.    ```bash    make convert    ```    end of README.mdEnv, Git and GitHub  Env(ironment) is used to capture things like path to Code or Home directory.  Git and GitHub is NOT Only used to exchange code between individuals, it is often used to exchange code through servers, in our case deployment for Website.   All tools we use have a behind the scenes relationships with the system they run on (MacOS, Windows, Linus) or a relationship with servers which they are connected to (ie GitHub).  There is an “env” command in bash.  There are environment files and setting files (.git/config) for Git.  They both use a key/value concept.  “env” show setting for your shell  “git clone” sets up a director of files  “cd $project” allows user to move inside that directory of files  “.git” is a hidden directory that is used by git to establish relationship between machine and the git server on GitHub.%%script bash# This command has no dependenciesecho \"Show the shell environment variables, key on left of equal value on right\"echo \"\"envbash: fg: %%script: no such jobShow the shell environment variables, key on left of equal value on rightMANPATH=/opt/homebrew/share/man::rvm_bin_path=/Users/aliyatang/.rvm/binVSCODE_CRASH_REPORTER_PROCESS_TYPE=extensionHostGEM_HOME=/Users/aliyatang/.rvm/gems/ruby-2.5.0SHELL=/bin/zshTMPDIR=/var/folders/h6/z_st21kd1bj6l0f07rpnsdrm0000gn/T/IRBRC=/Users/aliyatang/.rvm/rubies/ruby-2.5.0/.irbrcHOMEBREW_REPOSITORY=/opt/homebrewCONDA_SHLVL=1PYTHONUNBUFFERED=1CONDA_PROMPT_MODIFIER=(base) ORIGINAL_XDG_CURRENT_DESKTOP=undefinedOLDPWD=/Users/aliyatang/vscode/teacher/_notebooksMallocNanoZone=0MY_RUBY_HOME=/Users/aliyatang/.rvm/rubies/ruby-2.5.0PYTHONIOENCODING=utf-8USER=aliyatangCOMMAND_MODE=unix2003CONDA_EXE=/Users/aliyatang/opt/anaconda3/bin/condarvm_path=/Users/aliyatang/.rvmSSH_AUTH_SOCK=/private/tmp/com.apple.launchd.2vuKK9VyiI/Listeners__CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0PAGER=catELECTRON_RUN_AS_NODE=1VSCODE_AMD_ENTRYPOINT=vs/workbench/api/node/extensionHostProcessrvm_prefix=/Users/aliyatangPATH=/Users/aliyatang/.rvm/gems/ruby-2.5.0/bin:/Users/aliyatang/.rvm/gems/ruby-2.5.0@global/bin:/Users/aliyatang/.rvm/rubies/ruby-2.5.0/bin:/Users/aliyatang/.gem/ruby/2.7.7/bin:/Users/aliyatang/.rubies/ruby-2.7.7/lib/ruby/gems/2.7.0/bin:/Users/aliyatang/.rubies/ruby-2.7.7/bin:/Users/aliyatang/opt/anaconda3/bin:/Users/aliyatang/opt/anaconda3/condabin:/opt/homebrew/bin:/opt/homebrew/sbin:/Library/Frameworks/Python.framework/Versions/2.7/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/aliyatang/.rvm/bin:/Users/aliyatang/.rvm/bin__CFBundleIdentifier=com.microsoft.VSCodeCONDA_PREFIX=/Users/aliyatang/opt/anaconda3PWD=/Users/aliyatang/vscode/teachernotebooks=/Users/aliyatang/vscode/teacher/_notebooksVSCODE_HANDLES_UNCAUGHT_ERRORS=trueproject_repo=https://github.com/nighthawkcoders/teacher.gitproject=/Users/aliyatang/vscode/teacherproject_dir=/Users/aliyatang/vscodeXPC_FLAGS=0x0PS1=[PEXP\\[\\]ECT_PROMPT&gt;RUBY_ENGINE=rubyXPC_SERVICE_NAME=0rvm_version=1.29.12 (latest)SHLVL=1HOME=/Users/aliyatangVSCODE_NLS_CONFIG={\"locale\":\"en-us\",\"osLocale\":\"en-us\",\"availableLanguages\":{},\"_languagePackSupport\":true}HOMEBREW_PREFIX=/opt/homebrewGEM_ROOT=/Users/aliyatang/.rubies/ruby-2.7.7/lib/ruby/gems/2.7.0LOGNAME=aliyatangCONDA_PYTHON_EXE=/Users/aliyatang/opt/anaconda3/bin/pythonVSCODE_IPC_HOOK=/Users/aliyatang/Library/Application Support/Code/1.77-main.sockVSCODE_CODE_CACHE_PATH=/Users/aliyatang/Library/Application Support/Code/CachedData/7f329fe6c66b0f86ae1574c2911b681ad5a45d63GEM_PATH=/Users/aliyatang/.rvm/gems/ruby-2.5.0:/Users/aliyatang/.rvm/gems/ruby-2.5.0@globalRUBY_ROOT=/Users/aliyatang/.rubies/ruby-2.7.7CONDA_DEFAULT_ENV=baseVSCODE_PID=35482posts=/Users/aliyatang/vscode/teacher/_postsINFOPATH=/opt/homebrew/share/info:HOMEBREW_CELLAR=/opt/homebrew/CellarVSCODE_L10N_BUNDLE_LOCATION=VSCODE_CWD=/RUBY_VERSION=ruby-2.5.0_=/usr/bin/env%%script bash# Extract saved variablessource /tmp/variables.shcd $projectecho \"\"echo \"show the secrets of .git\"cd .gitls -lecho \"\"echo \"look at config file\"cat configbash: fg: %%script: no such jobshow the secrets of .gittotal 56-rw-r--r--   1 aliyatang  staff     21 Aug 22 23:35 HEAD-rw-r--r--   1 aliyatang  staff    312 Aug 22 23:35 config-rw-r--r--   1 aliyatang  staff     73 Aug 22 23:35 descriptiondrwxr-xr-x  15 aliyatang  staff    480 Aug 22 23:35 hooks-rw-r--r--   1 aliyatang  staff  11702 Aug 22 23:35 indexdrwxr-xr-x   3 aliyatang  staff     96 Aug 22 23:35 infodrwxr-xr-x   4 aliyatang  staff    128 Aug 22 23:35 logsdrwxr-xr-x   4 aliyatang  staff    128 Aug 22 23:35 objects-rw-r--r--   1 aliyatang  staff    112 Aug 22 23:35 packed-refsdrwxr-xr-x   5 aliyatang  staff    160 Aug 22 23:35 refslook at config file[core]\trepositoryformatversion = 0\tfilemode = true\tbare = false\tlogallrefupdates = true\tignorecase = true\tprecomposeunicode = true[remote \"origin\"]\turl = https://github.com/nighthawkcoders/teacher.git\tfetch = +refs/heads/*:refs/remotes/origin/*[branch \"main\"]\tremote = origin\tmerge = refs/heads/mainAdvanced Student Request - Make a file in Bash  This example was requested by a student (Jun Lim, CSA). The request was to make jupyer file using bash, I adapted the request to markdown.  This type of thought will have great extrapolation to coding and possibilities of using List, Arrays, or APIs to build user interfaces.  JavaScript is a language where building HTML is very common.  To get more interesting output from terminal, this will require using something like mdless (https://github.com/ttscoff/mdless).  This enables see markdown in rendered format.      On Desktop Install PKG from MacPorts    In Terminal on MacOS              Install ncurses        gem install mdless              Output of the example is much nicer in “jupyter”%%script bash# This example has error in VSCode, it run best on Jupytercd /tmpfile=\"sample.md\"if [ -f \"$file\" ]; then    rm $filefitee -a $file &gt;/dev/null &lt;&lt;EOF# Show Generated MarkdownThis introductory paragraph and this line and the title above are generated using tee with the standard input (&lt;&lt;) redirection operator.- This bulleted element is still part of the tee body.EOFecho \"- This bulleted element and lines below are generated using echo with standard output (&gt;&gt;) redirection operator.\" &gt;&gt; $fileecho \"- The list definition, as is, is using space to seperate lines.  Thus the use of commas and hyphens in output.\" &gt;&gt; $fileactions=(\"ls,list-directory\" \"cd,change-directory\" \"pwd,present-working-directory\" \"if-then-fi,test-condition\" \"env,bash-environment-variables\" \"cat,view-file-contents\" \"tee,write-to-output\" \"echo,display-content-of-string\" \"echo_text_&gt;\\$file,write-content-to-file\" \"echo_text_&gt;&gt;\\$file,append-content-to-file\")for action in ${actions[@]}; do  # for loop is very similar to other language, though [@], semi-colon, do are new  action=${action//-/ }  # convert dash to space  action=${action//,/: } # convert comma to colon  action=${action//_text_/ \\\"sample text\\\" } # convert _text_ to sample text, note escape character \\ to avoid \"\" having meaning  echo \"    - ${action//-/ }\" &gt;&gt; $file  # echo is redirected to file with &gt;&gt;doneecho \"\"echo \"File listing and status\"ls -l $file # list filewc $file   # show wordsmdless $file  # this requires installation, but renders markown from terminalrm $file  # clean up termporary filebash: fg: %%script: no such jobFile listing and status-rw-r--r--  1 aliyatang  wheel  809 Aug 22 23:36 sample.md      15     132     809 sample.mdbash: mdless: command not foundHack Preparation.  Review Tool Setup Procedures and think about some thing you could verify through a Shell notebook.      Come up with your own student view of this procedure to show your tools are installed. It is best that you keep the few things you understand, add things later as you start to understand them.    Name and create blog notes on some Linux commands you will use frequently.          ls: list files/directories in current directory      cd: change current directory      pwd: print current working directory      mkdir: create new directory      rm: remove files/directories      cp: copy files/directories      mv: move (rename) files/directories      cat: display contents of file      grep: search for pattern in files      chmod: change file perms        Is there anything we use to verify tools we installed? Review versions?          We can use these commands to verify installed tools and check their versions:      [tool_name] –version: check tool version information      which [tool_name]: find location of executable binary      whereis [tool_name]: info about tool, like binary, source, documentation locations, etc.  echo $PATH: lists directories where executable files are located        How would you update a repository?  Use the git command line?          Navigate to repository directory:              cd [directory_name]                  Pull changes from remote and merge into current local branch:                    git pull      git pull origin [master_branch_name]                  Commit changes:                    git commit -m                  Push changes:                    git push      git push origin [your_branch_name]      "
  },
  
  {
    "title": "Student GitHub Pages",
    "url": "/aliyaBlog/posts/VSCode-GitHub_Pages_IPYNB_2_/",
    "categories": "",
    "tags": "",
    "date": "2023-08-21 00:00:00 +0800",
    





    
    "snippet": "Create your own GitHub Pages Project  Make you own project from GitHub Pages Student Repo.Fork a GitHub Pages Repository  Goto GitHub student and run Fork.  Reference: Fork a repoStart the GitHub P...",
    "content": "Create your own GitHub Pages Project  Make you own project from GitHub Pages Student Repo.Fork a GitHub Pages Repository  Goto GitHub student and run Fork.  Reference: Fork a repoStart the GitHub Pages Student Project  Run the following commands using terminal on you machine.  Be sure Repo has been forked.  Clone and Open project in VSCode  Change “forkme” text with your “ghid” or selected location(base) id:~$ mkdir -p vscode # make a vscode directory(base) id:~$ cd vscode # change to the directory(base) id:~$ git clone https://github.com/forkme/student.git # change to your repo(base) id:~$ cd  student  # change to the project directory(base) id:~$ code . # open VSCode in project directoryVSCode for Python Extensions  VSCode Language extensions          Install Python, Python Environment Manager, Python Extension Pack, Pylance      Install Jupyter, Jupyter Keymap      Install IntelliCode, IntelliCode API Usage Examples      Windows machines install WSL Remote Development      %%HTML&lt;!-- Here is a little preview of HTML to Describe VSCode Marketplace --&gt;&lt;div&gt;    &lt;div style=\"float: left; margin: 0px 10px 10px 0px;\"&gt;        &lt;a href=\"https://marketplace.visualstudio.com/vscode\"&gt;            &lt;img alt=\"Extensions\" src=\"/assets/img/extensions.png\" title=\"VS Code Marketplace\" width=\"250\"&gt;        &lt;/a&gt;    &lt;/div&gt;    &lt;div&gt;        &lt;hr&gt;        &lt;p&gt;        Visual Studio Code claims to provide just the tools a developer needs for a quick code-build-debug and version control cycle.  It provides a Market Place for enhancements and more complex workflows.  &lt;mark&gt;Before adding extensions, clone projects&lt;/mark&gt; and see what is requested or added.  Here are some extension that were added through that process or that I have added...        &lt;/p&gt;        &lt;ul&gt;            &lt;li&gt;                &lt;mark&gt;In marketplace&lt;/mark&gt; there are several extensions for Python, Python Intellisense, Python Extension Pack            &lt;/li&gt;            &lt;li&gt;                &lt;mark&gt;Jupyter&lt;/mark&gt;: This supports build jupyter ipynb files from within VS Code            &lt;/li&gt;            &lt;li&gt;                &lt;mark&gt;Code Spell Checker&lt;/mark&gt;: Got to have it when building documents, particularly if you spell and typo like the Teacher            &lt;/li&gt;            &lt;li&gt;                &lt;mark&gt;IntelliCode&lt;/mark&gt;: Got to have it when creating a code file, it will sense type of code by extension.  Also, it help with syntax as you are coding.            &lt;/li&gt;        &lt;/ul&gt;        &lt;p&gt;        &lt;mark&gt;Review Details in Marketplace for better explanation of purpose of the things explained above&lt;/mark&gt;. There is a lot more!  As you need Git help look at things like &lt;mark&gt;Git History and GitLens&lt;/mark&gt;.  Or, perhaps you enjoy Vim and want Vim emulation for editing, their is an extension for that.  Later, there may be interest in AWS Toolkit or Deploy extensions.  We will learn more about Marketplace Extensions as we do more.        &lt;/p&gt;        &lt;hr&gt;    &lt;/div&gt;&lt;/div&gt;                                                                Visual Studio Code claims to provide just the tools a developer needs for a quick code-build-debug and version control cycle.  It provides a Market Place for enhancements and more complex workflows.  Before adding extensions, clone projects and see what is requested or added.  Here are some extension that were added through that process or that I have added...                                            In marketplace there are several extensions for Python, Python Intellisense, Python Extension Pack                                        Jupyter: This supports build jupyter ipynb files from within VS Code                                        Code Spell Checker: Got to have it when building documents, particularly if you spell and typo like the Teacher                                        IntelliCode: Got to have it when creating a code file, it will sense type of code by extension.  Also, it help with syntax as you are coding.                                    Review Details in Marketplace for better explanation of purpose of the things explained above. There is a lot more!  As you need Git help look at things like Git History and GitLens.  Or, perhaps you enjoy Vim and want Vim emulation for editing, their is an extension for that.  Later, there may be interest in AWS Toolkit or Deploy extensions.  We will learn more about Marketplace Extensions as we do more.                    Hacks  Setup Tools and test GitHub connection. Tool and Equipment setup is like attendance, without Tools and Equipment you are effectually absent.      Change index.md to show it is REALLY YOURS.  Refer to Markdown Cheet Sheet.              Push a minor “index.md” change and Verify on GitHub https://code.visualstudio.com/docs/editor/versioncontrol#_git-support        Verify “index.md” change on deployed GitHub Pages            "
  },
  
  {
    "title": "I Love My Tools!",
    "url": "/aliyaBlog/posts/Love_Tools/",
    "categories": "",
    "tags": "",
    "date": "2023-08-21 00:00:00 +0800",
    





    
    "snippet": "I Love My Tools!Become one with your tools.  They could be more important than code, code, code.Distributed Vesion Control      GitHub: Amazing collaboration features, making it super easy to work ...",
    "content": "I Love My Tools!Become one with your tools.  They could be more important than code, code, code.Distributed Vesion Control      GitHub: Amazing collaboration features, making it super easy to work together. I find it super cool how we can work on the same project simultaneously, and how we can track changes, manage conflicts, merge contributions very easily.        Visual Studio Code: VSCode’s versatility, it has a huge extension system - various programming language, workflows, frameworks. Also, even though VSCode isn’t an Integrated Development Environment (IDE), unlike Visual Studio, it still has a lot of IDE-like features such as a built in terminal, code completion, formatting, debugging, etc. Very nice! It also has a very user friendly interface as well, we have a customizable environment to alter to our own needs. I love changing my VSCode to minimalist and a light color theme for a clean and organized look!        GitHub Pages: It has easy hosting for a static website directly from GitHub repositories. We can easily showcase our projects, blogs, portfolios etc. WITHOUT dealing with a bunch of complex server set ups or separate web hosting services! Also, since it is integrated with Git, we can easily update the wesbite just by pushing changes to the repository.        Homebrew: Simplifies software installation on macOS, we can install a wide range of sofware, libraries, and tools just with this because it rovides a command-line package manager. This saves SO much time and effort in setting up development environment, because now we don’t have to manually download, configure, and install each package!        Docker: It makes the deployment of apps way easier, which ensures consistency across different environments and minimizes compatibility issues. More efficient development and deployment workflows!!        Jupyter Notebook: Interactive web-based environment, documents can contain live code and can be shared! It can be used for data science, analysis, visualization, etc.        Slack: As Mr.Mortenson said, it is like a formal version of Discord. Through slack, we can create channels for organized communication, making collaboration super efficient.  "
  },
  
  {
    "title": "GitHub Pages",
    "url": "/aliyaBlog/posts/GitHub_Pages/",
    "categories": "",
    "tags": "",
    "date": "2023-08-21 00:00:00 +0800",
    





    
    "snippet": "PBL Sprint 0 / Week 0Learning outcome. Building a personal and running GitHub Pages.  Monday: Live review of Tools and GitHub.  Tuesday through Thursday: Tech Talks and work.  Wednesday: Code, Code...",
    "content": "PBL Sprint 0 / Week 0Learning outcome. Building a personal and running GitHub Pages.  Monday: Live review of Tools and GitHub.  Tuesday through Thursday: Tech Talks and work.  Wednesday: Code, Code, Coding"
  },
  
  {
    "title": "College Board Pseudo Code",
    "url": "/aliyaBlog/posts/AP-pseudo-vs-python_IPYNB_2_/",
    "categories": "",
    "tags": "",
    "date": "2023-08-17 00:00:00 +0800",
    





    
    "snippet": "Learning College Board Pseudo Code  College Board uses a kind-of programming language in its Multiple Choice exam. There are thousands of different programming languages have been created, and more...",
    "content": "Learning College Board Pseudo Code  College Board uses a kind-of programming language in its Multiple Choice exam. There are thousands of different programming languages have been created, and more are being created every year.  College Board has designed a pseudo code, a non operational programming language, to highlight concepts that it wants every student to learn.College Board is trying to remain neutral and build Computer Science Principles off of any language, thus the Teacher is left to pick the language(s) according to application and curriculum.College Board Pseudo Code Exam Reference SheetComparison of CB Pseudo Code to Python with descriptions            Command Vocabulary      Pseudo code      Python      Purpose              Output      DISPLAY(expression)      print(expression, end=” “)      Displays the value of expression, followed by a space. Python defaults to newline, thus the end=” “              Input      a ← INPUT()      a = input(prompt)      Accepts a value from the user and returns it to the variable a.              Assignment      a ← expression      a = expression      Evaluates expression and assigns the result to the variable a.              Selection      IF (expression)      if expression:      Run commands in the code block associated with the selection              Iteration n times      REPEAT n TIMES      for i in range(n):      Repeat commands in the code block associated withe the iteration n times              Iteration expression      REPEAT UNTIL (expression)      while expression:      Repeat commands in the code block associated withe the iteration while expression is true              List Assignment      list ← [expression1, expression2, expression3]      list = [expression1, expression2, expression3]      Assigns 3 values to list, value can be literal or expressions              First index in List      list[1]      list[0]      Access the 1st element in the list[].  FYI, most programming languages start a zero.              Last index in List      list[LENGTH(list)]      list[len(list) - 1]      Access the last element in the list[].  If you start at zero, last element is length - 1.              Define Procedure      PROCEDURE name (parameter)      def name(parameter):      Create a procedure containing a sequence of programming instructions.              Expression equals      a = b      a == b      Evaluate if assigned value of a equals assigned value of b              Expression not equals      a ≠ b      a != b      Evaluate if assigned value of a is NOT equal to assigned value of b      Pseudo code IF Code Blocka ← 1b ← 1IF (a = b) {   DISPLAY(\"A equals B\")}# Python code if block to match Pseudo Codea = 1b = 1if (a == b):    # Python uses indent to establish code block, Teacher use tab key    print(\"A equals B\")Hacks  Key Learnings.  It is very important that you become fluent in “ Vocabulary” and researching problems.      Code a JavaScript cell, this must start with %%js%% in first line of cell. Match the IF condition example in this blog.    Code a REPEAT n TIMES as described in comparison sheet in Pseudo code, Python, and JavaScript.  Be sure to comment your code.          REPEAT 100 TIMES      Sum all the numpers      PRINT the result            Reflect on our PSEUDO code and how it helped with your problem solving in these hacks.    Maked efinition for: code block, sequence, selections, iteration.  Consider a strategy to remember Pseudo Code, Python and JavaScript for these definitions."
  },
  
  {
    "title": "VSCode, Python, Jupyter, ...",
    "url": "/aliyaBlog/posts/Tools_Equipment/",
    "categories": "Tools",
    "tags": "",
    "date": "2023-08-16 00:00:00 +0800",
    





    
    "snippet": "Hacks  Complete the procedure below accurately.  These are absolutely required and must be 100% accurate for your success.GitHub Account  Follow instruction https://docs.github.com/en/get-started/s...",
    "content": "Hacks  Complete the procedure below accurately.  These are absolutely required and must be 100% accurate for your success.GitHub Account  Follow instruction https://docs.github.com/en/get-started/signing-up-for-github/signing-up-for-a-new-github-account  Use your own personal/permanent email… NOT SCHOOL!!! GitHub account belongs to you.MacOS 1st Time Developer  VSCode install      Install VSCode    Anaconda install      Download for MacOS: Anaconda    Run Install: Answer yes to questions    Homebrew install      Copy and Paste to Install from Terminal Homebrew              Copy bash ... curl ...  command using copy box on website        Launch terminal from search bar        Paste bash ... curl ... command into Terminal …        Make sure command starts, this should provide feedback/output in terminal and could take a long time, like 10-min, there could be a  prompt in the middle, at about 5-minutes.  Follow any on screen instructions provided in terminal output to finish.              Homebrew installs a tool called “brew” which helps add and manage developer packages on MacOS.    At this point, the next task is to prepare tools.  You must start a new Terminal.  Now the Terminal prompt should be prefixed with (base).  If not, you need to go back to Anaconda install.      Open new Terminal, your prompt should look like this…      (base) iMac:~ jmort1021$              Key Packages needed on MacOS      Close and Start a new terminal, run each command in Terminal      $ brew list # list packages$ brew update # update package list$ brew upgrade # upgrade packages$ brew install git  # install latest git$ brew install python # install python3 for development$ python --version # version of python3 installed            Windows 1st Time Developer      VSCode install using WSL. Windows users have option to have best of Windows and Linux while developing within VSCode.        Install VSCode using WSL    Required review, become familiar with Windows WSL development    Anaconda install on WSL.      Try the exact commands in WSL Command / Powershell.    Only if there is a wget error… To find the latest Linux-x86 distribution hover over 64-Bit (x86) Installer of this page: https://www.anaconda.com/download#downloads.  Hover over  wget and Anaconda3 commands based on new link.      PS C:\\Users\\UserName&gt; wsl  # Windows prompt to WSL command$ cd /tmp$ wget https://repo.anaconda.com/archive/Anaconda3-2023.03-1-Linux-x86_64.sh$ chmod +x Anaconda3-2023.03-1-Linux-x86_64.sh# Answer yes to all the prompts$ ./Anaconda3-2023.03-1-Linux-x86_64.sh              At this point, the next task is to prepare for Packages, Jupyter Notebooks, and Kernels.  You must start a new WSL Command / Powershell.  Now the WSL prompt should be prefixed with (base) from Anaconda install.  If not, you need to go back to Anaconda install.      Open Command / Powershell.  If you are not looking like this you need to back up.      PS C:\\Users\\ShayM&gt; wsl  # Windows prompt(base) shay@MSI:/mnt/c/Users/ShayM$ cd ~ # WSL prompt(base) shay@MSI:~$ # WSL home, best place to install files              Key Packages needing update on WSL Ubuntu      In a WSL Command / Powershell install Python3```bash$ sudo apt list # list packages$ sudo apt update # update package list$ sudo apt upgrade # upgrade packages$ sudo apt install python3 python3-pip # install python3 and pip3 for development$ python –version  # version of python3 should be shown  Jupyter Install and Kernels (MacOs and WSL)  Install Jupyter and check python kernel  (base) id:~$ conda --version (base) id:~$ conda install jupyter # install jupyter(base) id:~$ jupyter kernelspec list # list installed kernelsAvailable kernels:  python3    /home/shay/.local/share/jupyter/kernels/python3  "
  },
  
  {
    "title": "Java Hello",
    "url": "/aliyaBlog/posts/java-hello_IPYNB_2_/",
    "categories": "Java",
    "tags": "",
    "date": "2023-08-15 00:00:00 +0800",
    





    
    "snippet": "Hello, World!This article shows the basic language structures and constructs of Java (aka anatomy).  In async order, it is critical to understand these examples and learn vocab for OOP and Creating...",
    "content": "Hello, World!This article shows the basic language structures and constructs of Java (aka anatomy).  In async order, it is critical to understand these examples and learn vocab for OOP and Creating Objects:  Object Oriented Programming  Creating Objects  Calling MethodsStatic exampleThe class HelloStatic contains the classic “Hello, World!” message that is often used as an introduction to a programming language.  The “public static void main(String[] args)”, or main method, is the default runtime method in Java and has a very specific and ordered definition (signature).The key terms in HelloStatic introduction:  “class” is a blueprint for code, it is the code definition and must be called to run  “method” or “static method” in this case, is the code to be run/executed, similar to a procedure  “method definition” or “signature” are the keywords “public static void” in front of the name “main” and the parameters “String[] args” after the name.  “method call” is the means in which we run the defined code// Define Static Method within a Classpublic class HelloStatic {    // Java standard runtime entry point    public static void main(String[] args) {            System.out.println(\"Hello World!\");    }}// A method call allows us to execute code that is wrapped in ClassHelloStatic.main(null);   // Class prefix allows reference of Static MethodDynamic ExampleThis example starts to use Java in its natural manner, using an object within the main method. This example is a very basic illustration of Object Oriente Programming (OOP). The main method is now used as a driver/tester, by making an instance of the class.  Thus, it creates an Object using the HelloObject() constructor.  Also, this Class contains a getter method called getHello() which returns the value with the “String hello”.The key terms in HelloStatic introduction:  “Object Oriented Programming” focuses software design around data, or objects.  “object” contains both methods and data  “instance of a class” is the process of making an object, unique or instances of variables are created within the object  “constructor” special method in class, code that is used to initialize the data within the object  “getter” is a method that is used to extract or reference data from within the object.// Define Class with Constructor returning Objectpublic class HelloObject {    private String hello;   // instance attribute or variable    public HelloObject() {  // constructor        hello = \"Hello, World!\";    }    public String getHello() {  // getter, returns value from inside the object        return this.hello;  // return String from object    }    public static void main(String[] args) {            HelloObject ho = new HelloObject(); // Instance of Class (ho) is an Object via \"new HelloObject()\"        System.out.println(ho.getHello()); // Object allows reference to public methods and data    }}// IJava activationHelloObject.main(null);Dynamic Example with two constructorsThis last example adds to the basics of the Java anatomy.  The Class now contains two constructors and a setter to go with the getter.  Also, observe the driver/tester now contains two objects that are initialized differently, 0 and 1 argument constructor.  Look at the usage of the “this” prefix.  The “this” keyword helps in clarification between instance and local variable.The key terms in HelloDynamic introduction:  “0 argument constructor” constructor method with no parameter ()  “1 argument constructor” construct method with a parameter (String hello)  “this keyword” allows you to clear reference something that is part of the object, data or method  “local variable” is a variable that is passed to the method in this example, see the 1 argument constructor as it has a local variable “String hello”  “dynamic” versus “static” is something that has option to change, static never changes.  A class (blueprint) and objects (instance of blueprint) are generally intended to be dynamic.  Constructors and Setters are used to dynamically change the content of an object.  “Java OOP, Java Classes/Objects, Java Class Attributes, Java Class Methods, Java Constructors” are explained if more complete detail in W3 Schools: https://www.w3schools.com/java/java_oop.asp// Define Classpublic class HelloDynamic { // name the first letter of class as capitalized, note camel case    // instance variable have access modifier (private is most common), data type, and name    private String hello;    // constructor signature 1, public and zero arguments, constructors do not have return type    public HelloDynamic() {  // 0 argument constructor        this.setHello(\"Hello, World!\");  // using setter with static string    }    // constructor signature, public and one argument    public HelloDynamic(String hello) { // 1 argument constructor        this.setHello(hello);   // using setter with local variable passed into constructor    }    // setter/mutator, setter have void return type and a parameter    public void setHello(String hello) { // setter        this.hello = hello;     // instance variable on the left, local variable on the right    }    // getter/accessor, getter used to return private instance variable (encapsulated), return type is String    public String getHello() {  // getter        return this.hello;    }    // public static void main(String[] args) is signature for main/drivers/tester method    // a driver/tester method is singular or called a class method, it is never part of an object    public static void main(String[] args) {          HelloDynamic hd1 = new HelloDynamic(); // no argument constructor        HelloDynamic hd2 = new HelloDynamic(\"Hello, Nighthawk Coding Society!\"); // one argument constructor        System.out.println(hd1.getHello()); // accessing getter        System.out.println(hd2.getHello());     }}// IJava activationHelloDynamic.main(null);HacksBuild your own Jupyter Notebook meeting these College Board and CTE competencies.  It is critical to understand Static versus Instance Now, this is College Board requirement!!!  Explain Anatomy of a Class in comments of program (Diagram key parts of the class).  Comment in code where there is a definition of a Class and an instance of a Class (ie object)  Comment in code where there are constructors and highlight the signature difference in the signature  Call an object method with parameter (ie setters).Additional requirements (Pick something)  Go through code progression of understanding Class usage and generating an Instance of a Class (Object).  a. Build a purposeful dynamic Class, using an Object, generate multiple instances:      - Person: Name and Age     - Dessert: Type and Cost     - Location: City, State, Zip b. Create a static void main tester method to generate objects of the class. c. In tester method, show how setters/mutators can be used to make the data in the Object dynamically change  Go through progression of understanding a Static Class.  Build a purposeful static Class, no Objects.          Calculate common operations on a Date field, age since date, older of two dates, number of seconds since date      Calculate stats functions on an array of values: mean, median, mode.      public class Cat {    // attributes of cat    private String name;    private String color;    private int age;    private String fav_act;    // constructor    public Cat(String name, String color, int age, String fav_act) {        this.name = name;        this.color = color;        this.age = age;        this.fav_act;    }    // getter and setter function    public String getname() {        return name;    }    public void setname(String name) {        this.name = name;    }    public String getcolor() {        return color;    }    public void setcolor(String color) {        this.color = color;    }    public int getage() {        return age;    }    public void setage(int age) {        this.age = age;    }    public int getfav_act() {        return age;    }    public void setfav_act(String fav_act) {        this.fav_act = fav_act;    }    // main method for testing    public static void main(String[] args) {        // create instances of Cat        Frog cat1 = new Cat(\"Luca\", \"Orange/White\", 3 ,\"Laser Pointer\");        Frog cat2 = new Cat(\"Max\", \"Brown\", 5 ,\"Sleeping\");        Frog cat3 = new Cat(\"Biggie\", \"Grey\", 8 ,\"Eating\");        // Display information about the frogs        System.out.println(cat1.getname() + \": Age - \" + cat1.getage() + \", Color - \" + cat1.getColor() + \", Favorite Activity - \" + cat1.getfav_act());        System.out.println(cat2.getname() + \": Age - \" + cat2.getage() + \", Color - \" + cat2.getColor() + \", Favorite Activity - \" + cat2.getfav_act());        System.out.println(cat3.getname() + \": Age - \" + cat3.getage() + \", Color - \" + cat3.getColor() + \", Favorite Activity - \" + cat3.getfav_act());    }}"
  },
  
  {
    "title": "Tools Setup",
    "url": "/aliyaBlog/posts/Tools_Sprint/",
    "categories": "Tools",
    "tags": "",
    "date": "2023-08-15 00:00:00 +0800",
    





    
    "snippet": "PBL Sprint 0 / Week 0Learning outcome.  Installing Tools and showing usage of VSCode.  Wednesday - Pick pair share partner, Pick crossover pair, Establish team of four.  Spend some time talking and...",
    "content": "PBL Sprint 0 / Week 0Learning outcome.  Installing Tools and showing usage of VSCode.  Wednesday - Pick pair share partner, Pick crossover pair, Establish team of four.  Spend some time talking and getting to know each other, particularly with Computer Science experience and goals.  You should be matched with someone that has similar experience.  Thursday - Setup Tools on laptop and/or Cloud Computer.  Friday - Review and test as a Pair. Spend 25 minutes at one keyboard then switch for next 25 minutes.Hack Prepartation  Look for ‘Hacks’ to know what to do next.  Try to be done and learn your machine befand tools before Monday.      A laptop, that you bring to class every day with ability to operate Development Tools on it or within the cloud.    GitHub Account, VSCode will be used to push/pull changes. GitHub is where we store and share code in the cloud, think of Google Docs but for Code.    GitHub Pages will be used to host your personal blog site containing notes, and hacks.  Building pages will teach Markdown, HTML, CSS, JavaScript and more.    Jupyter Notebooks will be used in conjunction with GitHub Pages to build running Code in your blog.    Slack Account, install the App on Laptop and/or phone, get used to reading announcements. Slack is the tool that we will use for messaging, we have been averaging 1000s of essages each year.    VSCode is the code editor we will be using in this class.  VSCode is more than and editor, this type of tool is often called an Interactive Development Environment (IDE).  "
  },
  
  {
    "title": "Classic Snake Game",
    "url": "/aliyaBlog/posts/PBL-FE-snake/",
    "categories": "Games",
    "tags": "javascript",
    "date": "2022-07-08 00:00:00 +0800",
    





    
    "snippet": "            Snake score: 0                                    Welcome to Snake, press space to begin            new game            settings                                    Game Over, press spac...",
    "content": "            Snake score: 0                                    Welcome to Snake, press space to begin            new game            settings                                    Game Over, press space to try again            new game            settings                                                    Settings Screen, press space to go back to playing            new game                        Speed:                                Slow                                Normal                                Fast                        Wall:                                On                                Off                        "
  },
  
  {
    "title": "Customize the Favicon",
    "url": "/aliyaBlog/posts/customize-the-favicon/",
    "categories": "Blogging, Tutorial",
    "tags": "favicon",
    "date": "2019-08-11 00:34:00 +0800",
    





    
    "snippet": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons...",
    "content": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons.Generate the faviconPrepare a square image (PNG, JPG, or SVG) with a size of 512x512 or more, and then go to the online tool Real Favicon Generator and click the button Select your Favicon image to upload your image file.In the next step, the webpage will show all usage scenarios. You can keep the default options, scroll to the bottom of the page, and click the button Generate your Favicons and HTML code to generate the favicon.Download &amp; ReplaceDownload the generated package, unzip and delete the following two from the extracted files:  browserconfig.xml  site.webmanifestAnd then copy the remaining image files (.PNG and .ICO) to cover the original files in the directory assets/img/favicons/ of your Jekyll site. If your Jekyll site doesn’t have this directory yet, just create one.The following table will help you understand the changes to the favicon files:            File(s)      From Online Tool      From Chirpy                  *.PNG      ✓      ✗              *.ICO      ✓      ✗        ✓ means keep, ✗ means delete.The next time you build the site, the favicon will be replaced with a customized edition."
  }
  
]

